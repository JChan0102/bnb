<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 인터페이스가 있는 패키지+클래스명 -->
<mapper namespace="com.bit.bnb.mypage.dao.ReviewDao">

	<!-- 내가쓴 리뷰리스트뿌리기 -->
	<select id="reviewToList"
		resultType="com.bit.bnb.mypage.model.ReviewVO">
		select re.reservationNum, r.userId, r.hostId,
		re.scope ,
		re.reviewContent , re.reviewDate from reservation r inner
		join review
		re
		on r.reservationNum = re.reservationNum
		where r.userId = #{userId}
		order by re.reviewDate desc
	</select>

	<!-- 작성해야할리스트찾기 -->
	<select id="reviewWriteList"
		resultType="com.bit.bnb.mypage.model.ReviewVO">
		SELECT r.reservationNum, r.userId, r.hostId,
		re.reviewContent,
		r.checkIn, r.checkOut from reservation r
		LEFT OUTER JOIN review re
		ON
		re.reservationNum = r.reservationNum
		where re.reviewContent is null
		<![CDATA[ and r.checkOut <= current_timestamp ]]>
		and r.userId = #{userId}
		order by r.checkIn
	</select>

	<!-- 리뷰작성하기 -->
	<insert id="reviewWrite">
		insert into review (reservationNum,
		reviewContent,
		scope)
		values (#{reservationNum}, #{reviewContent},
		#{scope})
	</insert>

	<!-- 리뷰 셀렉하기 -->
	<select id="reviewPick"
		resultType="com.bit.bnb.mypage.model.ReviewVO">
		select * from
		review where reservationNum =
		#{reservationNum}
	</select>

	<!-- 수정하기 -->
	<update id="reviewEdit">
		update review set reviewContent = #{reviewContent},
		scope = #{scope} where reservationNum = #{reservationNum}
	</update>

	<!-- 삭제하기 -->
	<delete id="reviewDelete">
		delete from review where reservationNum =
		#{reservationNum}
	</delete>

	<!-- 리뷰검색하기 -->
	<select id="searchReview"
		resultType="com.bit.bnb.mypage.model.ReviewVO">
		select re.reservationNum, r.userId, r.hostId,
		re.scope ,
		re.reviewContent , re.reviewDate from reservation r inner
		join review
		re
		on r.reservationNum = re.reservationNum
		where r.userId = #{userId}
		<if test="rvs.searchType != null">
			<if test="rvs.searchType == 'all'.toString()">
				and re.reviewContent LIKE CONCAT('%',#{rvs.keyword},'%')
				or r.hostId LIKE CONCAT('%',#{rvs.keyword},'%')
				or re.scope LIKE CONCAT('%',#{rvs.keyword},'%')
			</if>
			<if test="rvs.searchType == 'reviewContent'.toString()">
				and re.reviewContent LIKE CONCAT('%',#{rvs.keyword},'%')
			</if>
			<if test="rvs.searchType == 'hostId'.toString()">
				and r.hostId LIKE CONCAT('%',#{rvs.keyword},'%')
			</if>
			<if test="rvs.searchType == 'scope'.toString()">
				and re.scope LIKE CONCAT('%',#{rvs.keyword},'%')
			</if>
		</if>
		order by re.reviewDate desc
	</select>
</mapper>