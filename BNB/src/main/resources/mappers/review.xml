<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 인터페이스가 있는 패키지+클래스명 -->
<mapper namespace="com.bit.bnb.mypage.dao.ReviewDao">

	<resultMap type="com.bit.bnb.mypage.model.ReviewVO"
		id="reviewTo">
		<result property="reservationNum" column="reservationNum"
			javaType="int" />
		<result property="reviewContent" column="reviewContent"
			javaType="java.lang.String" />
		<result property="scope" column="scope" javaType="int" />
		<result property="userPhoto" column="userPhoto"
			javaType="java.lang.String" />
		<result property="reviewDate" column="reviewDate"
			javaType="java.sql.Timestamp" />
	</resultMap>

	<!-- 내가쓴 리뷰리스트뿌리기 -->
	<select id="reviewToList" parameterType="map"
		resultMap="reviewTo">
		select re.reservationNum, r.userId, r.hostId, 
		re.scope ,
		re.reviewContent , re.reviewDate from reservation r inner
		join review re
		on r.reservationNum = re.reservationNum
		where r.userId = #{userId}
		order by re.reviewDate desc
	</select>

	<resultMap type="com.bit.bnb.mypage.model.ReviewVO"
		id="reviewWrite">
		<result property="reservationNum" column="reservationNum"
			javaType="int" />
		<result property="reviewContent" column="reviewContent"
			javaType="java.lang.String" />
		<result property="checkIn" column="checkIn"
			javaType="java.sql.Timestamp" />
		<result property="checkOut" column="checkOut"
			javaType="java.sql.Timestamp" />
	</resultMap>

	<!-- 작성해야할리스트찾기 -->
	<select id="reviewWriteList" parameterType="map"
		resultMap="reviewWrite">
		SELECT r.reservationNum, r.userId, r.hostId,
		re.reviewContent, r.checkIn, r.checkOut from reservation r
		LEFT OUTER JOIN review re
		ON re.reservationNum = r.reservationNum
		where re.reviewContent is null
		<![CDATA[ and r.checkOut <= current_timestamp ]]>
		and r.userId = #{userId}
		order by r.checkIn
	</select>
	
	<!-- 리뷰작성하기 -->
	<insert id="reviewWrite" >
		insert into review (reservationNum, reviewContent, scope)
		values (#{reservationNum}, #{reviewContent}, #{scope})
	</insert>
	
	<!-- 리뷰 셀렉하기 -->
	<select id="reviewPick" resultType="map" resultMap="reviewTo">
		select * from review where reservationNum = #{reservationNum}
	</select>

	<!-- 수정하기 -->
	<update id="reviewEdit">
		update review set reviewContent = #{reviewContent},
		scope = #{scope} where reservationNum = #{reservationNum}
	</update>
	
	<!-- 삭제하기 -->
	<delete id="reviewDelete">
		delete from review where reservationNum = #{reservationNum}
	</delete>

</mapper>